# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Deploy Docs and ESPHome Firmware to Pages

on:
  workflow_dispatch:
  push:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build Vitepress Docs
  build-docs:
    name: Build Docs
    uses: ./.github/workflows/build-docs.yml

  prepare-release-summary:
    runs-on: ubuntu-latest
    name: Prepare release summary
    outputs:
      release_summary: ${{ steps.generate-summary.outputs.summary }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Release Summary
        id: generate-summary
        run: |
          GITHUB_REF_NAME=${{ github.ref_name }}
          SHA=${{ github.sha }}

          if [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            SUMMARY="Stable Firmware"
          elif [[ "${GITHUB_REF_NAME}" == dev* ]]; then
            SUMMARY="Experimental Firmware (${GITHUB_REF_NAME}), $(git log -1 --pretty=%B), ${SHA}"
          else
            SUMMARY=""
          fi

          # Encode special characters
          SUMMARY="${SUMMARY//'%'/'%25'}"
          SUMMARY="${SUMMARY//$'\n'/'%0A'}"
          SUMMARY="${SUMMARY//$'\r'/'%0D'}"
  
          echo "summary=$SUMMARY" >> $GITHUB_OUTPUT

  # Build stable firmware
  build-doorman-stock-stable-firmware:
    if: github.ref_name == 'master'
    name: Build Doorman Stock for Home Assistant (ESP32-S3) Firmware (stable)
    uses: ./.github/workflows/build-esphome.yml
    needs: prepare-release-summary
    with:
      files: firmware/ha-doorman-stock.yaml
      name: AzonInc.Doorman
      esphome_version: latest
      directory_name: doorman-stock
      summary: ${{ needs.prepare-release-summary.outputs.release_summary }}

  build-doorman-nuki-bridge-stable-firmware:
    if: github.ref_name == 'master'
    name: Build Doorman Nuki Bridge for Home Assistant (ESP32-S3) Firmware (stable)
    uses: ./.github/workflows/build-esphome.yml
    needs: prepare-release-summary
    with:
      files: firmware/ha-doorman-nuki-bridge.yaml
      name: AzonInc.Doorman-Nuki-Bridge
      esphome_version: latest
      directory_name: doorman-nuki-bridge
      summary: ${{ needs.prepare-release-summary.outputs.release_summary }}


  # Build dev firmware
  build-doorman-stock-dev-firmware:
    if: startsWith(github.ref_name, 'dev')
    name: Build Doorman Stock for Home Assistant (ESP32-S3) Firmware (dev)
    uses: ./.github/workflows/build-esphome.yml
    needs: prepare-release-summary
    with:
      files: firmware/ha-doorman-stock.dev.yaml
      name: AzonInc.Doorman
      esphome_version: latest
      directory_name: doorman-stock
      summary: ${{ needs.prepare-release-summary.outputs.release_summary }}

  build-doorman-nuki-bridge-dev-firmware:
    if: startsWith(github.ref_name, 'dev')
    name: Build Doorman Nuki Bridge for Home Assistant (ESP32-S3) Firmware (dev)
    uses: ./.github/workflows/build-esphome.yml
    needs: prepare-release-summary
    with:
      files: firmware/ha-doorman-nuki-bridge.dev.yaml
      name: AzonInc.Doorman-Nuki-Bridge
      esphome_version: latest
      directory_name: doorman-nuki-bridge
      summary: ${{ needs.prepare-release-summary.outputs.release_summary }}
          
  # Bundle all assets for Pages
  bundle-assets-stable:
    if: github.ref_name == 'master'
    name: Create asset bundle (stable)
    uses: ./.github/workflows/bundle-assets.yml
    needs: [build-docs, build-doorman-stock-stable-firmware, build-doorman-nuki-bridge-stable-firmware]

  bundle-assets-dev:
    if: startsWith(github.ref_name, 'dev')
    name: Create asset bundle (dev)
    uses: ./.github/workflows/bundle-assets.yml
    needs: [build-docs, build-doorman-stock-dev-firmware, build-doorman-nuki-bridge-dev-firmware]


  # Deployment job
  deploy-stable:
    if: github.ref_name == 'master'
    name: Deploy to Github Pages (stable)
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: [bundle-assets-stable]
    runs-on: ubuntu-latest 
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-dev:
    if: startsWith(github.ref_name, 'dev')
    name: Deploy to surge.sh (dev)
    environment:
      name: surge.sh
      url: "https://doorman-dev.surge.sh/"
    needs: [bundle-assets-dev]
    runs-on: ubuntu-latest
    steps:
      - name: Download Assets
        uses: actions/download-artifact@v4
        with:
          name: asset-bundle
          path: output

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm install -g surge
      - run: surge output ${{ secrets.SURGE_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}
