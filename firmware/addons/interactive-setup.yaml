# Interactive Command Setup Addon

globals:
  - id: command_setup_mode
    type: bool
    restore_value: yes
    initial_value: "true"

button:
  - platform: template
    id: doorman_interactive_setup_start
    name: "Interactive Setup: Start"
    icon: mdi:cog-play
    entity_category: CONFIG
    on_press: 
      - globals.set:
          id: command_setup_mode
          value: "true"
      - script.execute: update_led

  - platform: template
    id: doorman_interactive_setup_cancel
    name: "Interactive Setup: Cancel"
    icon: mdi:cog-stop
    entity_category: CONFIG
    on_press: 
      - globals.set:
          id: command_setup_mode
          value: "false"
      - script.execute: update_led

# Extend TCS Intercom Component
tcs_intercom:
  bus_command:
    on_value:
      # Command Setup Mode is active
      - if:
          condition:
            - lambda: return id(command_setup_mode) == true;
          then:
            # Command is either apartment or entrance doorbell
            - if:
                condition:
                  - lambda: |-
                      std::string hex_command = std::string(x.c_str());

                      std::string first(hex_command.begin(), hex_command.begin() + 1);
                      std::string serial(hex_command.begin() + 1, hex_command.begin() + 6);
                      std::string last(hex_command.begin() + 6, hex_command.begin() + 8);

                      // Apartment Doorbell or Entrance Doorbell
                      return (first == "1" && last == "41") || (first == "0" && serial != "00000" && last == "80");
                then:
                  # Save Commands
                  - lambda: |-
                      std::string hex_command = std::string(x.c_str());

                      std::string first(hex_command.begin(), hex_command.begin() + 1);
                      std::string serial(hex_command.begin() + 1, hex_command.begin() + 6);
                      std::string last(hex_command.begin() + 6, hex_command.begin() + 8);

                      // Entrance Doorbell
                      std::string entrance_doorbell_command_hex = "0" + serial + "80";
                      unsigned long entrance_doorbell_number = std::stoul(entrance_doorbell_command_hex, nullptr, 16);
                      id(entrance_doorbell_command) = entrance_doorbell_number;

                      // Open Door
                      // std::string open_entrance_door_command_hex = "1" + serial + "80";
                      // unsigned long open_entrance_door_number = std::stoul(open_entrance_door_command_hex, nullptr, 16);
                      // id(open_entrance_door_command) = open_entrance_door_number;

                      // Apartment Doorbell
                      std::string apartment_doorbell_command_hex = "1" + serial + "41";
                      unsigned long apartment_doorbell_number = std::stoul(apartment_doorbell_command_hex, nullptr, 16);
                      id(apartment_doorbell_command) = apartment_doorbell_number;

                      // Pick up phone
                      std::string pick_up_phone_command_hex = "3" + serial + "00";
                      unsigned long pick_up_phone_number = std::stoul(pick_up_phone_command_hex, nullptr, 16);
                      id(pick_up_phone_command) = pick_up_phone_number;

                      // Function Button
                      std::string function_button_command_hex = "6" + serial + "08";
                      unsigned long function_button_number = std::stoul(function_button_command_hex, nullptr, 16);
                      id(function_button_command) = function_button_number;

                  - globals.set:
                      id: command_setup_mode
                      value: "false"

                  - light.turn_on:
                      id: doorman_rgb_status_led
                      red: 0%
                      green: 100%
                      blue: 10%
                      effect: none

                  - delay: 3s
                  
                  - script.execute: update_led

            
script:
  - id: !extend update_led
    then:
      - if:
          condition:
            - lambda: |-
                return id(command_setup_mode) == true;
          then:
            - light.turn_on:
                id: doorman_rgb_status_led
                red: 0%
                green: 100%
                blue: 10%
                effect: pulse
          else:
            - light.turn_off:
                id: doorman_rgb_status_led
                transition_length: 1s