# Memory Utils Addon

# Extend TC:BUS Component
tc_bus:
  on_read_memory_complete:
    - logger.log: "Completed memory reading!"
    - lambda: |-
        std::string hexString = str_upper_case(format_hex(x));
        ESP_LOGD("tcs_bus", "Memory Dump: %s", hexString.c_str());

  on_read_memory_timeout:
    - logger.log: "Failed to read Memory"

number:
  - platform: template
    name: "Ringtone volume"
    optimistic: true
    min_value: 0
    max_value: 7
    step: 1
    set_action:
      - tc_bus.update_setting:
          type: volume_ringtone
          value: !lambda "return x;"

  - platform: template
    name: "Handset volume"
    optimistic: true
    min_value: 0
    max_value: 7
    step: 1
    set_action:
      - tc_bus.update_setting:
          type: volume_handset
          value: !lambda "return x;"

select:
  - platform: template
    name: "Ringtone: Door Call"
    optimistic: true
    options:
      - "Ringtone 1"
      - "Ringtone 2"
      - "Ringtone 3"
      - "Ringtone 4"
      - "Ringtone 5"
      - "Ringtone 6"
      - "Ringtone 7"
      - "Ringtone 8"
      - "Ringtone 9"
      - "Ringtone 10"
      - "Ringtone 11"
      - "Ringtone 12"
    initial_option: "Ringtone 1"
    set_action:
      - tc_bus.update_setting:
          type: ringtone_door_call
          value: !lambda |-
            std::string str = x;
            std::vector<std::string> v;
            char * token;
            char seps[] = " ";
            token = strtok (&str[1],seps);
            while (token != NULL)
            {
              v.push_back(token);
              token = strtok (NULL, seps);
            }

            return std::stoi(v[1].c_str());


button:
  - platform: template
    name: "Read Memory"
    on_press:
      - tc_bus.read_memory: