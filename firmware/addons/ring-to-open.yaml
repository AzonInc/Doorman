# Ring To Open Addon

binary_sensor:
  - id: !extend entrance_doorbell
    on_press:
      then:
        # Ring To Open Action
        - if:
            condition:
              - switch.is_on: doorman_ring_to_open
              - lambda: !lambda 'return id(doorman_ring_to_open_door_trigger).state == "Entrance" || id(doorman_ring_to_open_door_trigger).state == "Any";'
            then:
              # Deactivate Ring To Open when Ring once is selected
              - if:
                  condition:
                    - lambda: !lambda 'return id(doorman_ring_to_open_timeout_mode).state == "Ring once";'
                  then:
                    - switch.turn_off: doorman_ring_to_open

              # If delay is 60 seconds, use random delay from 5 to 15 seconds
              - if:
                  condition:
                    number.in_range:
                      id: doorman_ring_to_open_delay
                      above: 59
                  then:
                    - delay: !lambda "return 5000 + (rand() % 10000);"
                  else:
                    - delay: !lambda "return (id(doorman_ring_to_open_delay).state*1000) + 300;"

              - tc_bus.send:
                  type: open_door
                  address: 0

  - id: !extend second_entrance_doorbell
    on_press:
      then:
        # Ring To Open Action
        - if:
            condition:
              - switch.is_on: doorman_ring_to_open
              - lambda: !lambda 'return id(doorman_ring_to_open_door_trigger).state == "Second Entrance" || id(doorman_ring_to_open_door_trigger).state == "Any";'
            then:
              # Deactivate Ring To Open when Ring once is selected
              - if:
                  condition:
                    - lambda: !lambda 'return id(doorman_ring_to_open_timeout_mode).state == "Ring once";'
                  then:
                    - switch.turn_off: doorman_ring_to_open

              # If delay is 60 seconds, use random delay from 5 to 15 seconds
              - if:
                  condition:
                    number.in_range:
                      id: doorman_ring_to_open_delay
                      above: 59
                  then:
                    - delay: !lambda "return 5000 + (rand() % 10000);"
                  else:
                    - delay: !lambda "return (id(doorman_ring_to_open_delay).state*1000) + 300;"

              - tc_bus.send:
                  type: open_door
                  address: !lambda "return id(second_door_station_id).state;"

  - id: !extend function_button
    on_press:
      - switch.toggle: doorman_ring_to_open
      - delay: 300ms
      - if: 
          condition:
            - switch.is_on: doorman_ring_to_open
            - switch.is_on: doorman_ring_to_open_confirmation
          then:
            - tc_bus.send:
                type: floor_call


number:
  - platform: template
    name: "Ring To Open: Delay"
    id: doorman_ring_to_open_delay
    icon: "mdi:clock-end"
    mode: slider
    min_value: 0
    max_value: 60
    step: 1
    optimistic: true
    restore_value: true
    initial_value: 0
    unit_of_measurement: seconds
    entity_category: CONFIG
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_doorman_settings


switch:
  - platform: template
    id: doorman_ring_to_open
    name: "Ring To Open"
    icon: "mdi:checkbox-marked-circle-auto-outline"
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    turn_on_action:
      - script.execute: ring_to_open_timer
    turn_off_action:
      - script.stop: ring_to_open_timer
    on_turn_on:
      - script.execute: update_led
    on_turn_off:
      - script.execute: update_led
    web_server:
      sorting_group_id: sorting_group_doorman_settings

  - platform: template
    id: doorman_ring_to_open_confirmation
    name: "Ring To Open: Confirmation"
    icon: "mdi:bell-check"
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    entity_category: CONFIG
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_doorman_settings

  - platform: template
    id: doorman_ring_to_open_led_status
    name: "Ring To Open: Display Status"
    icon: "mdi:led-on"
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    entity_category: CONFIG
    disabled_by_default: true
    web_server:
      sorting_group_id: sorting_group_doorman_settings


select:
  - platform: template
    id: doorman_ring_to_open_timeout_mode
    name: "Ring To Open: Timeout"
    icon: "mdi:clock-fast"
    optimistic: true
    options:
      - Never
      - Ring once
      - 5 minutes
      - 10 minutes
      - 15 minutes
      - 20 minutes
      - 25 minutes
      - 30 minutes
      - 35 minutes
      - 40 minutes
      - 45 minutes
      - 50 minutes
      - 55 minutes
      - 60 minutes
    initial_option: Never
    entity_category: CONFIG
    web_server:
      sorting_group_id: sorting_group_doorman_settings

  - platform: template
    id: doorman_ring_to_open_door_trigger
    name: "Ring To Open: Door Station"
    icon: "mdi:door-open"
    optimistic: true
    options:
      - Entrance
      - Second Entrance
      - Any
    initial_option: Any
    entity_category: CONFIG
    web_server:
      sorting_group_id: sorting_group_doorman_settings


script:
  - id: ring_to_open_timer
    then:
      # Turn off Ring To Open Mode after selected time
      - if:
          condition:
            - lambda: !lambda 'return id(doorman_ring_to_open_timeout_mode).state != "Never" && id(doorman_ring_to_open_timeout_mode).state != "Ring once";'
          then:
            - delay: !lambda |-
                std::string str = id(doorman_ring_to_open_timeout_mode).state;
                std::vector<std::string> v;
                char * token;
                char seps[] = " ";
                token = strtok (&str[0],seps);
                while (token != NULL)
                {
                  v.push_back(token);
                  token = strtok (NULL, seps);
                }

                ESP_LOGD("main", "Ring To Open will stay turned on for %s minutes", v[0].c_str());

                return std::stoi(v[0].c_str()) * 60 * 1000;

            - switch.turn_off: doorman_ring_to_open

  - id: !extend update_led
    then:
      - if:
          condition:
            - switch.is_on: doorman_ring_to_open
            - switch.is_on: doorman_ring_to_open_led_status
          then:
            - light.turn_on:
                id: doorman_rgb_status_led
                red: 100%
                green: 100%
                blue: 3%
                effect: slow_pulse